Principles of parameter definitions and help plist files


Each kind of object comprises 2 files: "object.plist" and "object_help.plist". Each contains the dictionary named ROOT with a series of objects (key and value couples) which correspond either directly to cytosim parameters or to sub-dictionaries of parameters. Subditionaries end by "DIC" (which is removed upon display in the outline view) and can be nested. The hierarchy of the 2 files keys should be identical. The "object.plist" file contains the actual parameter values (number, boolean - which is also a number 0 or 1- or string); the "object_help.plist" file holds values that are only help strings for the parameters (the keys). This is thus a convenient way to get for each parameter a trio: the key, the value and the help string. Both files are read at the same time by VConfigObjectCreator methods.

An icon (encoded as a NSImage) should also be attributed to each parameter. The images are stored with a name that matches exactly the parameter's key into the Assets.xcassets content. It happens however that several parameters that can appear in different objects have the same name (the same key). As long as their icon is the same, no problem. But if they need different icons or have not the same place in the hierarchy, their key is appended {object's name}. This situation most often happens with dictionaries (the parents of a set of children parameters) but it can also involve a parameter and a dictionary (see for example activity {fiber} and activity {couple} DIC).

Parameter help comprises a text (the values in front of the keys stored in "object_help.plist") in which several possibilities of parameter values are listed (see for example the help text of activity {fiber}). These choices are expected to differ between two dictionaries with the same name (see activity {fiber} and activity {couple} for example). To keep track of these situations, a specific file named "help_icon_names.plist" is also implemented. Each of the dictionaries stored here lists the names of the choices that should be made available for a given object. To help the user figure out what these choices represent, a series of icons is displayed in the code snippet dialog between the parameter list and the help text. Clicking in the icon or in its name below automatically copies the name into the parameter's value.

